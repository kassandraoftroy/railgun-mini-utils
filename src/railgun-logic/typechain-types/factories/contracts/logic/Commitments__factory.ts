/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Commitments,
  CommitmentsInterface,
} from "../../../contracts/logic/Commitments";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063665033151161006657806366503315146100f8578063c718dbda14610101578063e82955881461013f578063ec73295914610152578063f19ea9031461015a57600080fd5b80630be4f422146100985780630c9c0c8d146100b45780632eb4a7ab146100dc57806338bf282e146100e5575b600080fd5b6100a160025481565b6040519081526020015b60405180910390f35b6100c76100c2366004610314565b610188565b604080519283526020830191909152016100ab565b6100a160035481565b6100a16100f33660046102f2565b6101d2565b6100a160055481565b61012f61010f3660046102f2565b602660209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ab565b6100a161014d366004610314565b610275565b6100a161028c565b61012f6101683660046102f2565b600160209081526000928352604080842090915290825290205460ff1681565b600080610197601060026103b9565b836002546101a5919061035e565b11156101c3576005546101b990600161035e565b9360009350915050565b60055460025491509150915091565b60408051808201825283815260208101839052905163014cf2b360e51b815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e56609161021c9160040161032d565b60206040518083038186803b15801561023457600080fd5b505af4158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c91906102d9565b90505b92915050565b6006816010811061028557600080fd5b0154905081565b6102d67f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610461565b81565b6000602082840312156102eb57600080fd5b5051919050565b6000806040838503121561030557600080fd5b50508035926020909101359150565b60006020828403121561032657600080fd5b5035919050565b60408101818360005b6002811015610355578151835260209283019290910190600101610336565b50505092915050565b6000821982111561037157610371610483565b500190565b600181815b808511156103b157816000190482111561039757610397610483565b808516156103a457918102915b93841c939080029061037b565b509250929050565b600061026c83836000826103cf5750600161026f565b816103dc5750600061026f565b81600181146103f257600281146103fc57610418565b600191505061026f565b60ff84111561040d5761040d610483565b50506001821b61026f565b5060208310610133831016604e8410600b841016171561043b575081810a61026f565b6104458383610376565b806000190482111561045957610459610483565b029392505050565b60008261047e57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208bd587f52fdbb93a22774f9d60a7714487b68950b32a9a291173fdbc9361d3e764736f6c63430008070033";

type CommitmentsConstructorParams =
  | [linkLibraryAddresses: CommitmentsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Commitments__factory extends ContractFactory {
  constructor(...args: CommitmentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Commitments__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: CommitmentsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Commitments & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Commitments__factory {
    return super.connect(runner) as Commitments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentsInterface {
    return new Interface(_abi) as CommitmentsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Commitments {
    return new Contract(address, _abi, runner) as unknown as Commitments;
  }
}

export interface CommitmentsLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
}
